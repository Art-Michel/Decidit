//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.2
//     from Assets/Scripts/Player/Controller/PlayerInputMap.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputMap : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputMap()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputMap"",
    ""maps"": [
        {
            ""name"": ""FirstPersonCamera"",
            ""id"": ""863135e6-bea6-4ed2-b692-413856ebbc9f"",
            ""actions"": [
                {
                    ""name"": ""Rotate"",
                    ""type"": ""Value"",
                    ""id"": ""01a0b487-aa39-4b9f-8f45-43ad21bf9009"",
                    ""expectedControlType"": ""Delta"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RotateX"",
                    ""type"": ""Value"",
                    ""id"": ""e491d7e4-43be-4119-8b69-a84644feefd5"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""RotateY"",
                    ""type"": ""Value"",
                    ""id"": ""29451bb7-91e8-4d2d-9acd-10ed968a1da8"",
                    ""expectedControlType"": ""Analog"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""5ba8563d-91ec-472c-9b0d-b178761191d9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": ""ScaleVector2"",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""e8c5941d-1200-4941-bc3b-817e5b007793"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""ac486cd9-a9d1-4608-a39c-40a7e99bd4c6"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard Mouse"",
                    ""action"": ""Rotate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""40ce88d8-245c-4004-9ae5-5d0b0d3d0347"",
                    ""path"": ""<Gamepad>/rightStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""RotateX"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""46794db6-9378-4cbc-83fe-f0befe03ec39"",
                    ""path"": ""<Gamepad>/rightStick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""RotateY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""838ba2a6-c262-4c0d-83e0-c3af829dbc19"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""738eeb83-2fe4-4198-a648-526dfc199c58"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""d6940a74-9583-44bc-82dc-475bf43c9cc8"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""4d3b0578-a6d9-450c-87e7-f7758b99c9a5"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""d5cb2f8a-f0ca-4d0a-9f67-3ac6797c47a3"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""4771ccf1-2263-458c-8b80-f8bc8ba26035"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard Mouse"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""77fc58e2-2d83-4eb6-82bb-34fddb55ecb1"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard Mouse"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""66918b5e-f08d-4bfa-a899-792cc5d57090"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Debugging"",
            ""id"": ""95214c0f-39c3-4ad9-b99c-fedda99eed54"",
            ""actions"": [
                {
                    ""name"": ""ChangeFramerate"",
                    ""type"": ""Button"",
                    ""id"": ""56ebfa07-7393-4cf0-b156-dbcde0e13491"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Unfocus"",
                    ""type"": ""Button"",
                    ""id"": ""4d60ddce-6e43-4645-8218-8488f175be8d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ChangeTimeScale"",
                    ""type"": ""Button"",
                    ""id"": ""ba7c64a0-68f6-4a5a-a281-f0ed735a51af"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Gun1"",
                    ""type"": ""Button"",
                    ""id"": ""7a3fe3ba-8f39-4ff1-9069-9971672ecf10"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Gun2"",
                    ""type"": ""Button"",
                    ""id"": ""caf670af-a360-4211-8380-ed6c19ac7441"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Gun3"",
                    ""type"": ""Button"",
                    ""id"": ""1347b817-829a-41df-bc09-1a7619e91ca4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Gun4"",
                    ""type"": ""Button"",
                    ""id"": ""1f13490c-f1b2-4b18-b076-86c0f710b1dc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill1"",
                    ""type"": ""Button"",
                    ""id"": ""56556aed-9db0-490a-b82a-f9948e2c0f46"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill2"",
                    ""type"": ""Button"",
                    ""id"": ""f5cc94f5-c99c-41f5-a255-5daea5aab0a3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill3"",
                    ""type"": ""Button"",
                    ""id"": ""9606d852-5015-4058-ae40-9ffcff58a95c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill4"",
                    ""type"": ""Button"",
                    ""id"": ""ea9c3391-0e30-4a72-8253-5fda05854f03"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""f92afc97-45de-41b0-9214-83ad78ee8cd3"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeFramerate"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3513621d-be26-4cd5-a0bd-223721c8c63a"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard Mouse"",
                    ""action"": ""Unfocus"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""1D Axis"",
                    ""id"": ""189f3d25-7428-482c-a76d-d4635490d4f6"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ChangeTimeScale"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""e38c85f8-ec10-492c-8f17-e1da4f1b46cb"",
                    ""path"": ""<Mouse>/scroll/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard Mouse"",
                    ""action"": ""ChangeTimeScale"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""bccc0c4f-b292-43d3-96ee-f15fe0279bdd"",
                    ""path"": ""<Mouse>/scroll/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard Mouse"",
                    ""action"": ""ChangeTimeScale"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""6552b25d-ac5c-46a6-998f-090d25298ebd"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard Mouse"",
                    ""action"": ""Gun1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b5658256-a918-43d1-a029-50e6a9392522"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard Mouse"",
                    ""action"": ""Gun2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e98f0ec5-d10c-49bc-b370-6eff3328cf78"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard Mouse"",
                    ""action"": ""Gun4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""67d43327-56d0-42f2-abfd-c7668864536b"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard Mouse"",
                    ""action"": ""Gun3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""c55672cc-ae17-4d63-88c4-f3c50a3452b5"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill1"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""c2b33dd3-4127-44f9-99f1-9f98cd22ad1a"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""759f5c9a-240d-4d96-9f00-5b6ef422c972"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""16409ffd-1f01-4671-92fb-875f4c093feb"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill2"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""323ab590-92f1-4f16-9394-f0e5767efe2f"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""69b975b2-2b20-49ab-b08d-929f96136b97"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""af9f9d0e-807d-41a7-8465-a454c5676218"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill3"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""14b48b3b-4325-444d-bb69-a99831e91f69"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""028f1854-403c-422d-9fb6-406b2fe1c060"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""One Modifier"",
                    ""id"": ""b36b4943-bea8-435f-95be-da938eec2e73"",
                    ""path"": ""OneModifier"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill4"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""modifier"",
                    ""id"": ""5c0df695-9f5d-4c63-a3d7-9073db4ccee6"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""binding"",
                    ""id"": ""b5d0b018-68e4-4142-a0de-4f70eb995baa"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Skill4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        },
        {
            ""name"": ""Shooting"",
            ""id"": ""e3b37b3a-b7dc-4ab7-8ee8-56df17f48a01"",
            ""actions"": [
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""ed3f7bf0-e61c-40fc-b550-9084afb34fa1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reload"",
                    ""type"": ""Button"",
                    ""id"": ""59da80fd-13d6-4907-9c2e-4ee298da4015"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c7cbbe7a-b738-4bb9-bea4-50f7b85a692e"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard Mouse"",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a45691b2-d916-4c0c-8c71-7f4adb5f6fea"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2c4704de-213a-49fa-9eb0-f14979c2e3a1"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard Mouse"",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7dea034c-c1fb-44df-8133-2a715b1129e3"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Controller"",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard Mouse"",
            ""bindingGroup"": ""Keyboard Mouse"",
            ""devices"": [
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Controller"",
            ""bindingGroup"": ""Controller"",
            ""devices"": [
                {
                    ""devicePath"": ""<DualShock4GamepadAndroid>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<SwitchProControllerHID>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<XInputController>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // FirstPersonCamera
        m_FirstPersonCamera = asset.FindActionMap("FirstPersonCamera", throwIfNotFound: true);
        m_FirstPersonCamera_Rotate = m_FirstPersonCamera.FindAction("Rotate", throwIfNotFound: true);
        m_FirstPersonCamera_RotateX = m_FirstPersonCamera.FindAction("RotateX", throwIfNotFound: true);
        m_FirstPersonCamera_RotateY = m_FirstPersonCamera.FindAction("RotateY", throwIfNotFound: true);
        m_FirstPersonCamera_Move = m_FirstPersonCamera.FindAction("Move", throwIfNotFound: true);
        m_FirstPersonCamera_Jump = m_FirstPersonCamera.FindAction("Jump", throwIfNotFound: true);
        // Debugging
        m_Debugging = asset.FindActionMap("Debugging", throwIfNotFound: true);
        m_Debugging_ChangeFramerate = m_Debugging.FindAction("ChangeFramerate", throwIfNotFound: true);
        m_Debugging_Unfocus = m_Debugging.FindAction("Unfocus", throwIfNotFound: true);
        m_Debugging_ChangeTimeScale = m_Debugging.FindAction("ChangeTimeScale", throwIfNotFound: true);
        m_Debugging_Gun1 = m_Debugging.FindAction("Gun1", throwIfNotFound: true);
        m_Debugging_Gun2 = m_Debugging.FindAction("Gun2", throwIfNotFound: true);
        m_Debugging_Gun3 = m_Debugging.FindAction("Gun3", throwIfNotFound: true);
        m_Debugging_Gun4 = m_Debugging.FindAction("Gun4", throwIfNotFound: true);
        m_Debugging_Skill1 = m_Debugging.FindAction("Skill1", throwIfNotFound: true);
        m_Debugging_Skill2 = m_Debugging.FindAction("Skill2", throwIfNotFound: true);
        m_Debugging_Skill3 = m_Debugging.FindAction("Skill3", throwIfNotFound: true);
        m_Debugging_Skill4 = m_Debugging.FindAction("Skill4", throwIfNotFound: true);
        // Shooting
        m_Shooting = asset.FindActionMap("Shooting", throwIfNotFound: true);
        m_Shooting_Shoot = m_Shooting.FindAction("Shoot", throwIfNotFound: true);
        m_Shooting_Reload = m_Shooting.FindAction("Reload", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // FirstPersonCamera
    private readonly InputActionMap m_FirstPersonCamera;
    private IFirstPersonCameraActions m_FirstPersonCameraActionsCallbackInterface;
    private readonly InputAction m_FirstPersonCamera_Rotate;
    private readonly InputAction m_FirstPersonCamera_RotateX;
    private readonly InputAction m_FirstPersonCamera_RotateY;
    private readonly InputAction m_FirstPersonCamera_Move;
    private readonly InputAction m_FirstPersonCamera_Jump;
    public struct FirstPersonCameraActions
    {
        private @PlayerInputMap m_Wrapper;
        public FirstPersonCameraActions(@PlayerInputMap wrapper) { m_Wrapper = wrapper; }
        public InputAction @Rotate => m_Wrapper.m_FirstPersonCamera_Rotate;
        public InputAction @RotateX => m_Wrapper.m_FirstPersonCamera_RotateX;
        public InputAction @RotateY => m_Wrapper.m_FirstPersonCamera_RotateY;
        public InputAction @Move => m_Wrapper.m_FirstPersonCamera_Move;
        public InputAction @Jump => m_Wrapper.m_FirstPersonCamera_Jump;
        public InputActionMap Get() { return m_Wrapper.m_FirstPersonCamera; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(FirstPersonCameraActions set) { return set.Get(); }
        public void SetCallbacks(IFirstPersonCameraActions instance)
        {
            if (m_Wrapper.m_FirstPersonCameraActionsCallbackInterface != null)
            {
                @Rotate.started -= m_Wrapper.m_FirstPersonCameraActionsCallbackInterface.OnRotate;
                @Rotate.performed -= m_Wrapper.m_FirstPersonCameraActionsCallbackInterface.OnRotate;
                @Rotate.canceled -= m_Wrapper.m_FirstPersonCameraActionsCallbackInterface.OnRotate;
                @RotateX.started -= m_Wrapper.m_FirstPersonCameraActionsCallbackInterface.OnRotateX;
                @RotateX.performed -= m_Wrapper.m_FirstPersonCameraActionsCallbackInterface.OnRotateX;
                @RotateX.canceled -= m_Wrapper.m_FirstPersonCameraActionsCallbackInterface.OnRotateX;
                @RotateY.started -= m_Wrapper.m_FirstPersonCameraActionsCallbackInterface.OnRotateY;
                @RotateY.performed -= m_Wrapper.m_FirstPersonCameraActionsCallbackInterface.OnRotateY;
                @RotateY.canceled -= m_Wrapper.m_FirstPersonCameraActionsCallbackInterface.OnRotateY;
                @Move.started -= m_Wrapper.m_FirstPersonCameraActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_FirstPersonCameraActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_FirstPersonCameraActionsCallbackInterface.OnMove;
                @Jump.started -= m_Wrapper.m_FirstPersonCameraActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_FirstPersonCameraActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_FirstPersonCameraActionsCallbackInterface.OnJump;
            }
            m_Wrapper.m_FirstPersonCameraActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Rotate.started += instance.OnRotate;
                @Rotate.performed += instance.OnRotate;
                @Rotate.canceled += instance.OnRotate;
                @RotateX.started += instance.OnRotateX;
                @RotateX.performed += instance.OnRotateX;
                @RotateX.canceled += instance.OnRotateX;
                @RotateY.started += instance.OnRotateY;
                @RotateY.performed += instance.OnRotateY;
                @RotateY.canceled += instance.OnRotateY;
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
            }
        }
    }
    public FirstPersonCameraActions @FirstPersonCamera => new FirstPersonCameraActions(this);

    // Debugging
    private readonly InputActionMap m_Debugging;
    private IDebuggingActions m_DebuggingActionsCallbackInterface;
    private readonly InputAction m_Debugging_ChangeFramerate;
    private readonly InputAction m_Debugging_Unfocus;
    private readonly InputAction m_Debugging_ChangeTimeScale;
    private readonly InputAction m_Debugging_Gun1;
    private readonly InputAction m_Debugging_Gun2;
    private readonly InputAction m_Debugging_Gun3;
    private readonly InputAction m_Debugging_Gun4;
    private readonly InputAction m_Debugging_Skill1;
    private readonly InputAction m_Debugging_Skill2;
    private readonly InputAction m_Debugging_Skill3;
    private readonly InputAction m_Debugging_Skill4;
    public struct DebuggingActions
    {
        private @PlayerInputMap m_Wrapper;
        public DebuggingActions(@PlayerInputMap wrapper) { m_Wrapper = wrapper; }
        public InputAction @ChangeFramerate => m_Wrapper.m_Debugging_ChangeFramerate;
        public InputAction @Unfocus => m_Wrapper.m_Debugging_Unfocus;
        public InputAction @ChangeTimeScale => m_Wrapper.m_Debugging_ChangeTimeScale;
        public InputAction @Gun1 => m_Wrapper.m_Debugging_Gun1;
        public InputAction @Gun2 => m_Wrapper.m_Debugging_Gun2;
        public InputAction @Gun3 => m_Wrapper.m_Debugging_Gun3;
        public InputAction @Gun4 => m_Wrapper.m_Debugging_Gun4;
        public InputAction @Skill1 => m_Wrapper.m_Debugging_Skill1;
        public InputAction @Skill2 => m_Wrapper.m_Debugging_Skill2;
        public InputAction @Skill3 => m_Wrapper.m_Debugging_Skill3;
        public InputAction @Skill4 => m_Wrapper.m_Debugging_Skill4;
        public InputActionMap Get() { return m_Wrapper.m_Debugging; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(DebuggingActions set) { return set.Get(); }
        public void SetCallbacks(IDebuggingActions instance)
        {
            if (m_Wrapper.m_DebuggingActionsCallbackInterface != null)
            {
                @ChangeFramerate.started -= m_Wrapper.m_DebuggingActionsCallbackInterface.OnChangeFramerate;
                @ChangeFramerate.performed -= m_Wrapper.m_DebuggingActionsCallbackInterface.OnChangeFramerate;
                @ChangeFramerate.canceled -= m_Wrapper.m_DebuggingActionsCallbackInterface.OnChangeFramerate;
                @Unfocus.started -= m_Wrapper.m_DebuggingActionsCallbackInterface.OnUnfocus;
                @Unfocus.performed -= m_Wrapper.m_DebuggingActionsCallbackInterface.OnUnfocus;
                @Unfocus.canceled -= m_Wrapper.m_DebuggingActionsCallbackInterface.OnUnfocus;
                @ChangeTimeScale.started -= m_Wrapper.m_DebuggingActionsCallbackInterface.OnChangeTimeScale;
                @ChangeTimeScale.performed -= m_Wrapper.m_DebuggingActionsCallbackInterface.OnChangeTimeScale;
                @ChangeTimeScale.canceled -= m_Wrapper.m_DebuggingActionsCallbackInterface.OnChangeTimeScale;
                @Gun1.started -= m_Wrapper.m_DebuggingActionsCallbackInterface.OnGun1;
                @Gun1.performed -= m_Wrapper.m_DebuggingActionsCallbackInterface.OnGun1;
                @Gun1.canceled -= m_Wrapper.m_DebuggingActionsCallbackInterface.OnGun1;
                @Gun2.started -= m_Wrapper.m_DebuggingActionsCallbackInterface.OnGun2;
                @Gun2.performed -= m_Wrapper.m_DebuggingActionsCallbackInterface.OnGun2;
                @Gun2.canceled -= m_Wrapper.m_DebuggingActionsCallbackInterface.OnGun2;
                @Gun3.started -= m_Wrapper.m_DebuggingActionsCallbackInterface.OnGun3;
                @Gun3.performed -= m_Wrapper.m_DebuggingActionsCallbackInterface.OnGun3;
                @Gun3.canceled -= m_Wrapper.m_DebuggingActionsCallbackInterface.OnGun3;
                @Gun4.started -= m_Wrapper.m_DebuggingActionsCallbackInterface.OnGun4;
                @Gun4.performed -= m_Wrapper.m_DebuggingActionsCallbackInterface.OnGun4;
                @Gun4.canceled -= m_Wrapper.m_DebuggingActionsCallbackInterface.OnGun4;
                @Skill1.started -= m_Wrapper.m_DebuggingActionsCallbackInterface.OnSkill1;
                @Skill1.performed -= m_Wrapper.m_DebuggingActionsCallbackInterface.OnSkill1;
                @Skill1.canceled -= m_Wrapper.m_DebuggingActionsCallbackInterface.OnSkill1;
                @Skill2.started -= m_Wrapper.m_DebuggingActionsCallbackInterface.OnSkill2;
                @Skill2.performed -= m_Wrapper.m_DebuggingActionsCallbackInterface.OnSkill2;
                @Skill2.canceled -= m_Wrapper.m_DebuggingActionsCallbackInterface.OnSkill2;
                @Skill3.started -= m_Wrapper.m_DebuggingActionsCallbackInterface.OnSkill3;
                @Skill3.performed -= m_Wrapper.m_DebuggingActionsCallbackInterface.OnSkill3;
                @Skill3.canceled -= m_Wrapper.m_DebuggingActionsCallbackInterface.OnSkill3;
                @Skill4.started -= m_Wrapper.m_DebuggingActionsCallbackInterface.OnSkill4;
                @Skill4.performed -= m_Wrapper.m_DebuggingActionsCallbackInterface.OnSkill4;
                @Skill4.canceled -= m_Wrapper.m_DebuggingActionsCallbackInterface.OnSkill4;
            }
            m_Wrapper.m_DebuggingActionsCallbackInterface = instance;
            if (instance != null)
            {
                @ChangeFramerate.started += instance.OnChangeFramerate;
                @ChangeFramerate.performed += instance.OnChangeFramerate;
                @ChangeFramerate.canceled += instance.OnChangeFramerate;
                @Unfocus.started += instance.OnUnfocus;
                @Unfocus.performed += instance.OnUnfocus;
                @Unfocus.canceled += instance.OnUnfocus;
                @ChangeTimeScale.started += instance.OnChangeTimeScale;
                @ChangeTimeScale.performed += instance.OnChangeTimeScale;
                @ChangeTimeScale.canceled += instance.OnChangeTimeScale;
                @Gun1.started += instance.OnGun1;
                @Gun1.performed += instance.OnGun1;
                @Gun1.canceled += instance.OnGun1;
                @Gun2.started += instance.OnGun2;
                @Gun2.performed += instance.OnGun2;
                @Gun2.canceled += instance.OnGun2;
                @Gun3.started += instance.OnGun3;
                @Gun3.performed += instance.OnGun3;
                @Gun3.canceled += instance.OnGun3;
                @Gun4.started += instance.OnGun4;
                @Gun4.performed += instance.OnGun4;
                @Gun4.canceled += instance.OnGun4;
                @Skill1.started += instance.OnSkill1;
                @Skill1.performed += instance.OnSkill1;
                @Skill1.canceled += instance.OnSkill1;
                @Skill2.started += instance.OnSkill2;
                @Skill2.performed += instance.OnSkill2;
                @Skill2.canceled += instance.OnSkill2;
                @Skill3.started += instance.OnSkill3;
                @Skill3.performed += instance.OnSkill3;
                @Skill3.canceled += instance.OnSkill3;
                @Skill4.started += instance.OnSkill4;
                @Skill4.performed += instance.OnSkill4;
                @Skill4.canceled += instance.OnSkill4;
            }
        }
    }
    public DebuggingActions @Debugging => new DebuggingActions(this);

    // Shooting
    private readonly InputActionMap m_Shooting;
    private IShootingActions m_ShootingActionsCallbackInterface;
    private readonly InputAction m_Shooting_Shoot;
    private readonly InputAction m_Shooting_Reload;
    public struct ShootingActions
    {
        private @PlayerInputMap m_Wrapper;
        public ShootingActions(@PlayerInputMap wrapper) { m_Wrapper = wrapper; }
        public InputAction @Shoot => m_Wrapper.m_Shooting_Shoot;
        public InputAction @Reload => m_Wrapper.m_Shooting_Reload;
        public InputActionMap Get() { return m_Wrapper.m_Shooting; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(ShootingActions set) { return set.Get(); }
        public void SetCallbacks(IShootingActions instance)
        {
            if (m_Wrapper.m_ShootingActionsCallbackInterface != null)
            {
                @Shoot.started -= m_Wrapper.m_ShootingActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_ShootingActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_ShootingActionsCallbackInterface.OnShoot;
                @Reload.started -= m_Wrapper.m_ShootingActionsCallbackInterface.OnReload;
                @Reload.performed -= m_Wrapper.m_ShootingActionsCallbackInterface.OnReload;
                @Reload.canceled -= m_Wrapper.m_ShootingActionsCallbackInterface.OnReload;
            }
            m_Wrapper.m_ShootingActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
                @Reload.started += instance.OnReload;
                @Reload.performed += instance.OnReload;
                @Reload.canceled += instance.OnReload;
            }
        }
    }
    public ShootingActions @Shooting => new ShootingActions(this);
    private int m_KeyboardMouseSchemeIndex = -1;
    public InputControlScheme KeyboardMouseScheme
    {
        get
        {
            if (m_KeyboardMouseSchemeIndex == -1) m_KeyboardMouseSchemeIndex = asset.FindControlSchemeIndex("Keyboard Mouse");
            return asset.controlSchemes[m_KeyboardMouseSchemeIndex];
        }
    }
    private int m_ControllerSchemeIndex = -1;
    public InputControlScheme ControllerScheme
    {
        get
        {
            if (m_ControllerSchemeIndex == -1) m_ControllerSchemeIndex = asset.FindControlSchemeIndex("Controller");
            return asset.controlSchemes[m_ControllerSchemeIndex];
        }
    }
    public interface IFirstPersonCameraActions
    {
        void OnRotate(InputAction.CallbackContext context);
        void OnRotateX(InputAction.CallbackContext context);
        void OnRotateY(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
    }
    public interface IDebuggingActions
    {
        void OnChangeFramerate(InputAction.CallbackContext context);
        void OnUnfocus(InputAction.CallbackContext context);
        void OnChangeTimeScale(InputAction.CallbackContext context);
        void OnGun1(InputAction.CallbackContext context);
        void OnGun2(InputAction.CallbackContext context);
        void OnGun3(InputAction.CallbackContext context);
        void OnGun4(InputAction.CallbackContext context);
        void OnSkill1(InputAction.CallbackContext context);
        void OnSkill2(InputAction.CallbackContext context);
        void OnSkill3(InputAction.CallbackContext context);
        void OnSkill4(InputAction.CallbackContext context);
    }
    public interface IShootingActions
    {
        void OnShoot(InputAction.CallbackContext context);
        void OnReload(InputAction.CallbackContext context);
    }
}
